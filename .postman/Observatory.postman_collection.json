{
	"info": {
		"name": "Observatory",
		"_postman_id": "6187cc8b-7370-7ac2-690a-e0b171c09de0",
		"description": "Postman collection for RCOS Observatory.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User - Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e06e1fd9-8b5e-4ebe-94ed-381570807e5e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"foo@bar.com\",\n\t\"password\": \"abc123\"\n}"
				},
				"url": {
					"raw": "{{host}}/auth/local",
					"host": [
						"{{host}}"
					],
					"path": [
						"auth",
						"local"
					]
				},
				"description": "Authenticates a User by their `email` and `password`."
			},
			"response": []
		},
		{
			"name": "User - Register",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"foo@bar.com\",\n\t\"password\": \"abc123\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "Registers a new User - accepts `email` and `password` parameters."
			},
			"response": []
		},
		{
			"name": "User - Profile",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d53541a7-ff7e-4f93-9807-969021dbcd81",
						"type": "text/javascript",
						"exec": [
							"// Authenticates the user before this request",
							"let requestObj = {",
							"    url: pm.environment.get(\"host\") + '/auth/local',",
							"    method: \"POST\",",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify({ email: pm.environment.get(\"email\"), password: pm.environment.get(\"password\") })",
							"    }",
							"}",
							"",
							"// Authenticates the user and stores their token in the `auth_token` environment variable",
							"pm.sendRequest(requestObj, function (err, response) {",
							"    let json = response.json();",
							"    pm.environment.set(\"auth_token\", \"Bearer \" + json.token); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "foo@bar.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "abc123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/api/users/me",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"me"
					]
				},
				"description": "Fetches the profile of the current user - requires `authorization` header."
			},
			"response": []
		},
		{
			"name": "GET /api/posts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "265eed58-f88d-4cbe-8e2c-5559635f4f73",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				},
				"description": "Get api posts"
			},
			"response": []
		},
		{
			"name": "GET /api/posts/:id",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{host}}/api/posts/5738cefdffd7ec3b75f3349d",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"5738cefdffd7ec3b75f3349d"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "POST /api/posts",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YWFiOTY4ZTdiNjJkNzViZjdjMzdmZTYiLCJpYXQiOjE1MjE1ODA2NTUsImV4cCI6MTUyMTU5ODY1NX0.WgHffxixT0j52Y0LT0SSz8gQpHBYNkl9CCPbcCKnq4w"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"*And this is fun*\",\n    \"content\": \"To use **markdown**\",\n    \"projectId\": \"000000000000000000000030\"\n}"
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "PUT /api/posts/:id",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YWFiOTY4ZTdiNjJkNzViZjdjMzdmZTYiLCJpYXQiOjE1MjE1ODA2NTUsImV4cCI6MTUyMTU5ODY1NX0.WgHffxixT0j52Y0LT0SSz8gQpHBYNkl9CCPbcCKnq4w"
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/api/posts/5738cefdffd7ec3b75f3349d",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"5738cefdffd7ec3b75f3349d"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "DELETE /api/posts/:id",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YWFiOTY4ZTdiNjJkNzViZjdjMzdmZTYiLCJpYXQiOjE1MjE1ODA2NTUsImV4cCI6MTUyMTU5ODY1NX0.WgHffxixT0j52Y0LT0SSz8gQpHBYNkl9CCPbcCKnq4w"
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/api/posts/5738cefdffd7ec3b75f3349d",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"5738cefdffd7ec3b75f3349d"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}
  "info": {
    "name": "Observatory",
    "_postman_id": "c63c5bf2-78dd-4a82-a512-080990cc296c",
    "description": "Postman collection for RCOS Observatory.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "User - Login",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "e06e1fd9-8b5e-4ebe-94ed-381570807e5e",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"email\": \"foo@bar.com\",\n\t\"password\": \"abc123\"\n}"
        },
        "url": {
          "raw": "{{host}}/auth/local",
          "host": [
            "{{host}}"
          ],
          "path": [
            "auth",
            "local"
          ]
        },
        "description": "Authenticates a User by their `email` and `password`."
      },
      "response": []
    },
    {
      "name": "User - Register",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"email\": \"foo@bar.com\",\n\t\"password\": \"abc123\"\n}"
        },
        "url": {
          "raw": "{{host}}/api/users",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "users"
          ]
        },
        "description": "Registers a new User - accepts `email` and `password` parameters."
      },
      "response": []
    },
    {
      "name": "Commits",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{host}}/api/commits",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "commits"
          ]
        },
        "description": "get commits\n"
      },
      "response": []
    },
    {
      "name": "Commit - ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{host}}/api/commits/:id",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "commits",
            ":id"
          ],
          "variable": [
            {
              "key": "id",
              "value": "5a9f1038ee3ebe00074e23ac",
              "description": "commit id"
            }
          ]
        },
        "description": "Get a commit ID\n"
      },
      "response": []
    },
    {
      "name": "User - Profile",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "d53541a7-ff7e-4f93-9807-969021dbcd81",
            "type": "text/javascript",
            "exec": [
              "// Authenticates the user before this request",
              "let requestObj = {",
              "    url: pm.environment.get(\"host\") + '/auth/local',",
              "    method: \"POST\",",
              "    header: {",
              "        'content-type': 'application/json'",
              "    },",
              "    body: {",
              "        mode: 'raw',",
              "        raw: JSON.stringify({ email: pm.environment.get(\"email\"), password: pm.environment.get(\"password\") })",
              "    }",
              "}",
              "",
              "// Authenticates the user and stores their token in the `auth_token` environment variable",
              "pm.sendRequest(requestObj, function (err, response) {",
              "    let json = response.json();",
              "    pm.environment.set(\"auth_token\", \"Bearer \" + json.token); ",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "{{auth_token}}"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "email",
              "value": "foo@bar.com",
              "type": "text"
            },
            {
              "key": "password",
              "value": "abc123",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{host}}/api/commits/user/:githubProfile",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "commits",
            "user",
            ":githubProfile"
          ],
          "variable": [
            {
              "key": "githubProfile",
              "value": "doors",
              "description": "github login"
            }
          ]
        },
        "description": "Fetches the profile of the current user - requires `authorization` header."
      },
      "response": []
    },
    {
      "name": "User - Commit Activity",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{host}}/api/commits/user/:githubProfile/days/:timeperiod",
          "host": [
            "{{host}}"
          ],
          "path": [
            "api",
            "commits",
            "user",
            ":githubProfile",
            "days",
            ":timeperiod"
          ],
          "variable": [
            {
              "key": "githubProfile",
              "value": "doors",
              "description": "github login"
            },
            {
              "key": "timeperiod",
              "value": "5",
              "description": "number of days"
            }
          ]
        },
        "description": "Get a user's commits over x amount of days\n"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "05c98be3-e484-45b4-bcaf-ceb3e684efdb",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "13ecbb4c-5247-463d-8bbd-96e5cc3d0f4b",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "fe960317-cbaf-49c9-a2b3-4ab280ad78c1",
      "key": "localhost",
      "value": "http://localhost:8080",
      "type": "text"
    }
  ]
}